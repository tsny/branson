// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "cockroachdb"
    url      = env("DATABASE_URL")
}

model Post {
    id        Int      @id @default(sequence())
    createdAt DateTime @default(now())
    likes     Int      @default(0)
    author    User     @relation(fields: [authorID], references: [id])
    authorID  Int

    content String?
}

model User {
    id            Int             @id @default(sequence())
    boins         Int             @default(0)
    email         String          @unique
    profilePicURL String?
    firstName     String?
    lastName      String?
    isAdmin       Boolean         @default(false)
    role          String?         @default("user")
    posts         Post[]
    rules         Rule[]
    CardOwnership CardOwnership[]
    CardHistory   CardHistory[]
    Business      Business[]
}

model Business {
    id        Int     @id @default(sequence())
    name      String
    location  String  @default("branson")
    service   String?
    memberIDs Int[]
    founder   User    @relation(fields: [userId], references: [id])
    userId    Int
}

model Rule {
    id       Int    @id @default(sequence())
    content  String
    author   User   @relation(fields: [authorID], references: [id])
    authorID Int
    fine     Int    @default(1)
}

model Card {
    id            Int             @id @default(sequence())
    rarity        String          @default("common")
    type          String
    title         String
    desc          String
    quote         String?
    imageURL      String?
    CardOwnership CardOwnership[]
    CardHistory   CardHistory[]
}

model CardOwnership {
    id     Int  @id @default(sequence())
    user   User @relation(fields: [userId], references: [id])
    userId Int
    card   Card @relation(fields: [cardId], references: [id])
    cardId Int
}

model CardHistory {
    id     Int    @id @default(sequence())
    user   User   @relation(fields: [userId], references: [id])
    userId Int
    card   Card   @relation(fields: [cardId], references: [id])
    cardId Int
    action String
}

model CardPack {
    id        Int @id @default(sequence())
    cost      Int @default(1)
    cardCount Int @default(3)
}
